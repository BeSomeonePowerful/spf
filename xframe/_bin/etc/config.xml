<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2011 (http://www.altova.com) by TeaM DJiNN (TeaM DJiNN) -->
<!--Sample XML file generated by XMLSpy v2011 (http://www.altova.com)-->
<!--
	配置文件命名：AppName=kernal节点配置的appName
	AppName_config.xml
-->
<xframe xsi:noNamespaceSchemaLocation="config.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- common 公共节点，配置公共资源   -->
	<common>
		<!-- log 整个系统的默认日志输出
			logLevel=日志等级：Debug、Info、Error
			logCout=日志输出类型：Cout、File
		-->
		<log logLevel="Debug" logType="Cout"/>
		<!-- syslog 整个系统的syslog日志输出配置
			logToSyslog=true/false 是否输出到syslog
			taskID=10	syslog日志输出模块id，默认是10，如不知道则不要修改
		-->
		<syslog logToSyslog="True" taskID="10"/>
		<!-- dblist 整个系统的数据库资源配置
			dbID=数据库资源id，1、2、3、4 等
			dbHost=数据库地址
			dbPort=数据库端口
			dbName=数据库名或schema名
			dbUser=数据库登录用户名
			dbPass=数据库登录密码
			dbType=数据库类型，0=MySQL、1=Oracle、2=SQLLite、3=Redis
		-->
		<dblist>
			<db dbID="1" dbHost="127.0.0.1" dbPort="3306" dbName="xframe" dbUser="root" dbPass="laolaoda" dbType="0"/>
		</dblist>
	</common>
	<!-- kernal 内核节点，配置内核需要的配置
		hostIP=系统的监听地址，默认可以不配置
		appID=系统的应用id，task收发消息的时候，hostid取值，每个应用在启动的时候，必须唯一
		appName=系统的名字
		recycleTime=kernal回收时间，暂时无意义
	-->
	<kernal hostIP="127.0.0.1" appID="1" appName="xframe" recycleTime="7200">
		<!-- timerrsc 内核定时器资源
			id="1"，定时器序号，1、2、3等，代码中将使用定时器序号进行定时器设置
			delay="10000"，定时器延迟，单位毫秒
			name="TIMER_DIALOG_RECYCLE"，定时器名字，主要是可读
			resendnum="0"，是否自动重发，可用于设置消息重发次数，默认0：不重发 
		-->
		<timerrsc>
			<timer id="1" name="timer1" delay="10000" resendnum="10"/>
		</timerrsc>
		<!-- log 内核日志，默认与common相同   -->
		<log logLevel="Debug" logType="File"/>
		<!-- sc 命令行客户端xclient控制地址端口设置
			scIP=监听地址
			scPort=监听端口
			hbInterval=心跳间隔（如果连接到sc）
		-->
		<sc scIP="127.0.0.1" scPort="9000" hbInterval="10000"/>
		<!-- process 系统任务配置
			task：加载的任务
				taskid=任务标识，tasklist中的taskid
				threadnum=线程数量
		-->
		<process>
			<task taskID="2" threadNum="1"/>
			<task taskID="3" threadNum="1"/>
		</process>
	</kernal>
	
	<!-- tasklist 系统的所有任务列表
		taskID=任务ID，task收发消息的时候，logaddr取值
		taskType=任务类型，psa（协议栈）、task（mptask）
		taskName=任务名
	-->
	<tasklist>
		<!-- psa节点 -->
		<task taskID="2" taskType="psa" taskName="task1">
			<!-- timerrsc，定时器资源，与kernal相同 -->
			<timerrsc>
				<timer delay="10000" name="timer2" resendnum="10" id="2"/>
			</timerrsc>
			<!-- dbrsc，数据库资源
				index=索引，从1开始
				dbID=数据库资源索引，与common下的dblist映射
			-->
			<dbrsc>
				<db index="1" dbID="1"/>
			</dbrsc>
			<extend>
				<!-- psa 协议栈配置节点	 -->
				<psa>
					<!--用于绑定监听的地址、端口、承载类型等  
						<bind bindID="地址绑定序号" 
							 localIP="实际绑定的地址" 
							 publicIP="如果LocaIP是私网地址，则这里是与该私网地址映射的公网地址；不填则这两个地址一致（在端口映射模式下，如iptables、docker等，需要将localIP映射为公网IP，以保证外网访问"  
							 localPort="绑定的监听端口" 
							 transportType="绑定的承载类型：UDP、TCP、TLS、WS、WSS" 
							 networkType="网络类型：IPv4、IPv6"/>
							 -->
					<binds>
						<bind localIP="127.0.0.1" transportType="text" networkType="text" bindID="text" localPort="text"/>
					</binds>
					<!-- target 协议栈收到的消息，发送目标，协议栈自定义 -->
					<target procTask="text" regTask="text"/>
				</psa>
			</extend>
		</task>
		<!-- task节点 -->
		<task taskID="3" taskType="task" taskName="task1">
			<timerrsc>
				<timer delay="10000" name="timer3" resendnum="10" id="3"/>
			</timerrsc>
			<dbrsc>
				<db index="1" dbID="1"/>
			</dbrsc>
			<extend>
				<task>
					<!-- target task发送的消息，发送哪个协议栈task，应用可自定义 -->
					<target psaTask="text"/>
				</task>
			</extend>
		</task>
		<!-- logtask syslog日志输出task配置	-->
		<task taskID="10" taskType="task" taskName="LogTask">
			<timerrsc/>
			<dbrsc/>
			<log/>
			<extend>		
				<!-- syslog 日志输出配置
					logLevel=日志输出等级：DEBUG=7,INFO=6,NOTICE=5,WARNING=4,ERR=3,CRIT=2,ALERT=1,EMERG=0 
					sysloglevel=日志输出等级名字
				-->		
				<sysLog logLevel="6" sysloglevel="LOG_INFO" />				
				<!-- facility 日志输出设备配置
					logtype=对应代码中的日志输出类型，必须大于0，
					fid=对应syslog的LOG_LOACL0=16,...,LOG_LOCAL7=23；最多不超过32个，最大上限在logTask中设置 
					logname=日志输出名字
				-->
				<facilities>
					<facility logtype="1" logname="MSGINFO" fid="17"/>
					<facility logtype="2" logname="COUNTINFO" fid="18"/>
					<facility logtype="3" logname="STATICINFO" fid="19"/>
					<facility logtype="4" logname="ONLINEINFO" fid="22"/>
					<facility logtype="5" logname="ACTIVEUSERINFO" fid="20"/>
                    <facility logtype="6" logname="ACTIVEDIALOGINFO" fid="23"/>
				</facilities>
			</extend>
		</task>
		<!-- sip协议栈task配置	-->
		<task taskID="101" taskType="psa" taskName="PsaSIP">
			<timerrsc>
				<timer id="2" delay="10000" name="TIMER_PSASIP_RECYCLE_DIALOG" resendnum="0"/>
				<timer id="3" delay="600000" name="TIMER_PSASIP_FLOWSTATUS" resendnum="0"/>
			</timerrsc>
			<dbrsc>
				<db index="1" dbID="1"/>
			</dbrsc>
			<log logLevel="Error" logType="File"/>
			<extend>
				<psa>
					<binds>

						<bind bindID="1" localIP="10.109.247.85" publicIP="10.109.247.85" localPort="5089" transportType="TCP" networkType="IPv4"/>
						<bind bindID="2" localIP="10.109.247.85" publicIP="10.109.247.85" localPort="5089" transportType="UDP" networkType="IPv4"/>
					<!--	<bind bindID="3" localIP="10.109.247.79" publicIP="10.109.247.85"  localPort="5095" transportType="WS" networkType="IPv4"/>-->
					</binds>
					<!-- target 收到的SIP消息将分发到哪个模块
						procTask=INVITE、SUBSCRIBE、REFER、MESSAGE等业务消息分发到模块
						regTask=REGISTER注册消息分发模块
						detecTask=OPTION消息分发到模块
					-->
					<target procTask="1001" regTask="1002" detecTask="1003"/>
					<!-- sip消息对话维护时间
						regRefreshInterval=默认注册对话刷新时间
						callRefreshInterval=默认INVITE对话刷新时间
					-->
					<sip regRefreshInterval="600" callRefreshInterval="60"/>
					<!--	用于将下发请求的域名映射为IP地址（这里映射了，就不用再去DNS查询了），
						<host name="映射的域名" ip="映射的IP地址"/> -->
					<dnscache>
						<host name="chinartc.com" ip="10.109.247.85"/>
					</dnscache>
				</psa>
			</extend>
		</task>
	</tasklist>
	
	<!-- xclient 仅用于xclient配置，设置一个config.xml文件，不加任何前缀，供xclient读取
		remoteIp=连接的服务节点地址
		remotePort=连接的服务节点端口
	-->
	<xclient remotePort="8088" remoteIp="127.0.0.1"/>
</xframe>
